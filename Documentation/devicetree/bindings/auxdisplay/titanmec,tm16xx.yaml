# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/auxdisplay/titanmec,tm16xx.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Auxiliary displays based on TM16xx and compatible LED controllers

maintainers:
  - Jean-François Lessard <jefflessard3@gmail.com>

description: |
  TM16xx controllers manage a matrix of LEDs organized in grids (rows) and segments (columns).
  Each grid or segment can be wired to drive either a digit or individual icons, depending on the
  board design.

  Typical display example:

           ---    ---       ---    ---
    WIFI  |   |  |   |  -  |   |  |   |  USB  PLAY
           ---    ---       ---    ---
    LAN   |   |  |   |  -  |   |  |   |  BT   PAUSE
           ---    ---       ---    ---

  The controller itself is agnostic of the display layout. The specific arrangement
  (which grids and segments drive which digits or icons) is determined by the board-level
  wiring. Therefore, these bindings describe hardware configuration at the PCB level
  to enable support of multiple display implementations using these LED controllers.

properties:
  compatible:
    enum:
      - titanmec,tm1618
      - titanmec,tm1620
      - titanmec,tm1628
      - titanmec,tm1650
      - fdhisi,fd620
      - fdhisi,fd628
      - fdhisi,fd650
      - fdhisi,fd6551
      - fdhisi,fd655
      - icore,aip650
      - icore,aip1618
      - icore,aip1628
      - princeton,pt6964
      - winrise,hbs658

  reg:
    maxItems: 1

  titanmec,digits:
    description: |
      Array of grid (row) indexes corresponding to specific wiring of digits in the display matrix.
      Defines which grid lines are connected to digit elements.
    $ref: /schemas/types.yaml#/definitions/uint8-array
    items:
      minimum: 0
      maximum: 7
    minItems: 1
    maxItems: 8

  titanmec,segment-mapping:
    description: |
      Array of segment (column) indexes specifying the hardware layout mapping used for digit display.
      Each entry gives the segment index corresponding to a standard 7-segment element (a-g).
    $ref: /schemas/types.yaml#/definitions/uint8-array
    items:
      minimum: 0
      maximum: 7
    minItems: 7
    maxItems: 7

  titanmec,transposed:
    description: |
      Optional flag indicating if grids and segments are swapped compared to standard matrix orientation.
      This accommodates devices where segments are wired to rows and grids to columns.
    $ref: /schemas/types.yaml#/definitions/flag

  "#address-cells":
    const: 2

  "#size-cells":
    const: 0

patternProperties:
  "^led@[0-7],[0-7]$":
    $ref: /schemas/leds/common.yaml#
    properties:
      reg:
        description: Grid (row) and segment (column) index in the matrix of this individual LED icon
    required:
      - reg

required:
  - compatible
  - reg
  - titanmec,digits
  - titanmec,segment-mapping

additionalProperties: true

examples:
  - |
    #include <dt-bindings/leds/common.h>

    i2c {
      #address-cells = <1>;
      #size-cells = <0>;

      display-controller@24 {
        reg = <0x24>;
        compatible = "fdhisi,fd655";
        titanmec,digits = [01 02 03 04];
        titanmec,segment-mapping = [03 04 05 00 01 02 06];
        #address-cells = <2>;
        #size-cells = <0>;

        led@0,0 {
          reg = <0 0>;
          function = LED_FUNCTION_ALARM;
        };

        led@0,1 {
          reg = <0 1>;
          function = LED_FUNCTION_USB;
        };

        led@0,2 {
          reg = <0 2>;
          function = "play";
        };

        led@0,3 {
          reg = <0 3>;
          function = "pause";
        };

        led@0,4 {
          reg = <0 4>;
          function = "colon";
        };

        led@0,5 {
          reg = <0 5>;
          function = LED_FUNCTION_LAN;
        };

        led@0,6 {
          reg = <0 6>;
          function = LED_FUNCTION_WLAN;
        };
      };
    };

  - |
    #include <dt-bindings/leds/common.h>

    spi {
      #address-cells = <1>;
      #size-cells = <0>;

      display-controller@0 {
        reg = <0x0>;
        compatible = "fdhisi,fd628";
        titanmec,transposed;
        titanmec,digits = [00 01 02 03];
        titanmec,segment-mapping = [00 01 02 03 04 05 06];
        spi-3wire;
        spi-lsb-first;
        spi-rx-delay-us = <1>;
        spi-max-frequency = <500000>;
        #address-cells = <2>;
        #size-cells = <0>;

        led@4,0 {
          reg = <4 0>;
          function = "apps";
        };

        led@4,1 {
          reg = <4 1>;
          function = "setup";
        };

        led@4,2 {
          reg = <4 2>;
          function = LED_FUNCTION_USB;
        };

        led@4,3 {
          reg = <4 3>;
          function = LED_FUNCTION_SD;
        };

        led@4,4 {
          reg = <4 4>;
          function = "colon";
        };

        led@4,5 {
          reg = <4 5>;
          function = "hdmi";
        };

        led@4,6 {
          reg = <4 6>;
          function = "video";
        };
      };
    };
